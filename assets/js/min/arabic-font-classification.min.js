window.onload = (() => { var t = new FontFaceObserver("ArefRuqaa"), e = new FontFaceObserver("WebNastaliq"), a = null, n = null, i = (n = document.getElementById("prediction-container"), document.getElementById("canvas")), o = i.getContext("2d"); o.font = "40px ArefRuqaa"; var d = ["أ", "ب", "ت", "ث", "ج", "ح", "خ", "د", "ذ", "ر", "ز", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ك", "ل", "م", "ن", "ه", "و", "ي"], r = ["30px", "40px", "50px", "60px", "70px"], g = ["ArefRuqaa", "WebNastaliq"]; function l() { u(document.getElementById("input-text").value), document.querySelectorAll("#sample-images-container img").forEach(function (t) { t.addEventListener("click", function () { c(t) }) }), document.getElementById("upload-image").addEventListener("input", function () { if (this.files && this.files[0]) { let t = document.createElement("img"); t.width = 100, t.height = 100, t.src = URL.createObjectURL(this.files[0]), t.onload = (() => c(t)) } }), document.getElementById("synthesize-btn").addEventListener("click", function () { o.fillStyle = "white", o.fillRect(0, 0, 100, 100); let t = document.getElementById("input-text").value, e = document.getElementById("font-select").value, a = "ArefRuqaa"; switch (e) { case "ruqaa": a = "ArefRuqaa"; break; case "farsi": a = "WebNastaliq"; break; default: a = "ArefRuqaa" }let n = s(48) + 1, i = () => (s(26) + 75) / 100, l = s(5) + 3, u = (s(2) + 3) / 100, c = () => s(5), y = (s(26), () => s(51) + 25); randomBgImg = document.createElement("img"), randomBgImg.src = "../assets/imgs/arabic-font-classification/bgs/bg" + n + ".jpg", randomBgImg.width = 100, randomBgImg.height = 100, randomBgImg.onload = (() => { if (o.globalAlpha = i(), o.drawImage(randomBgImg, 0, 0, 100, 100), n <= 15) { let t = ""; for (let e = 0; e <= l; e++)t += d[s(28)]; o.fillStyle = "black", o.globalAlpha = u, o.font = r[c()] + " " + g[(() => s(2))()], o.fillText(t, y(), y()) } o.globalAlpha = 1, o.font = r[c()] + " " + a, o.fillStyle = "rgba(0, 0, 0, " + i() + ")", o.fillText(t, y(), y()) }) }), document.getElementById("font-select").addEventListener("input", function () { u(document.getElementById("input-text").value) }), document.getElementById("predict-btn").addEventListener("click", function () { let t = i.toDataURL("image/jpeg").replace("image/jpeg", "image/octet-stream"), e = document.createElement("img"); e.src = t, e.width = 100, e.height = 100, e.onload = (() => c(e)) }), document.getElementById("input-text").oninput = function (t) { u(t.target.value) } } function u(t) { o.fillStyle = "white", o.fillRect(0, 0, 100, 100), o.fillStyle = "rgba(0, 0, 0, 1)"; let e = "ArefRuqaa"; switch (document.getElementById("font-select").value) { case "ruqaa": e = "ArefRuqaa"; break; case "farsi": e = "WebNastaliq"; break; default: e = "ArefRuqaa" }o.font = "40px " + e, o.textAlign = "center", o.fillText(t, 50, 60) } function s(t) { return Math.floor(Math.random() * Math.floor(t)) } function c(t) { function e() { o.drawImage(t, 0, 0, 100, 100); let e = i.toDataURL("image/jpeg").replace("image/jpeg", "image/octet-stream"), d = document.createElement("img"); d.width = 100, d.height = 100, d.src = e, d.onload = (() => { imgtensor = tf.browser.fromPixels(d).mean(2).toFloat().expandDims(-1), imgtensor = tf.image.resizeNearestNeighbor(imgtensor, [100, 100]), imgtensor = imgtensor.reshape([1, 100, 100, 1]), imgds = tf.data.array([imgtensor]), imgds = imgds.batch(1), a.predict(imgtensor).data().then(t => { document.querySelector(".prediction-container-wrapper .prediction-icon svg").classList.remove("predict"), n.innerHTML = parseFloat(t.toString()) > .5 ? "Ruqaa" : "Nastaliq (Farsi)" }) }) } n.innerHTML = " ", document.querySelector(".prediction-container-wrapper .prediction-icon svg").classList.add("predict"), null == a ? (document.getElementById("loading-model-text").innerText = "Loading model...", tf.loadLayersModel("../../assets/jsmodels/fontmodel/model.json").then(t => { a = t, document.getElementById("loading-model-text").classList.add("success"), document.getElementById("loading-model-text").innerText = "Model loaded", setTimeout(() => document.getElementById("loading-model-text").classList.add("hidden"), 1500), console.log("model loaded") })).then(() => { e() }) : e() } Promise.all([t.load(), e.load()]).then(l, function (a) { console.log(a, "Error loading fonts, trying again..."), Promise.all([t.load(), e.load()]).then(l, function (t) { console.log(t) }) }); var y = { value: "51%" }, f = { value: 105702 }, m = { value: 20 }, p = { x: 100, y: 50 }, x = { value: 100 }, v = { value: 2 }, b = { value: 30 }, I = { value: 100 }, h = { x: 50, y: 60 }, B = { value: 50 }, q = anime.timeline({ autoplay: !1, loop: !1, easing: "linear", update: function (t) { w.value = q.progress } }), w = document.querySelector("#fig3 .animejs-controls .progress"); document.querySelector("#fig3 .animejs-controls .play").onclick = q.play, document.querySelector("#fig3 .animejs-controls .pause").onclick = q.pause, document.querySelector("#fig3 .animejs-controls .restart").onclick = q.restart, w.addEventListener("input", function () { q.seek(q.duration * (w.value / 100)) }), w.addEventListener("mousedown", function () { q.pause() }), w.addEventListener("mouseup", function () { q.play() }), q.add({ targets: ["#fig3-annot1", "#fig3-bgs-container"], duration: 300, opacity: 1, delay: anime.stagger(500) }).add({ targets: "#fig3-bgs", duration: 2500, translateX: "-288px", easing: "easeInOutBack", delay: 2e3 }).add({ targets: "#fig3-gen-bg", duration: 200, opacity: 1, delay: 200 }).add({ targets: ["#fig3-annot2", "#fig3-bg-opacity-container"], duration: 300, opacity: 1, delay: 1e3 }).add({ targets: y, duration: 5e3, value: "79%", delay: 1e3, round: 1, easing: "spring(1.5, 20, 6, 0)", update: function () { document.querySelector("#fig3-bg-opacity-container tspan").textContent = y.value, document.getElementById("fig3-gen-bg").style.opacity = Number(y.value.substring(0, 2)) / 100 } }).add({ targets: ["#fig3-annot1", "#fig3-bgs-container", "#fig3-annot2", "#fig3-bg-opacity-container"], opacity: 0, delay: 700, duration: 300 }).add({ targets: ["#fig3-annot3", "#fig3-wordlist-container", "#fig3-annot4"], duration: 300, opacity: 1, delay: anime.stagger(700) }).add({ targets: "#fig3-wordlist", duration: 3500, translateX: "-220px", easing: "easeInOutBack", delay: 4e3 }).add({ targets: "#fig3-gen-bg-text", duration: 200, opacity: 1, delay: 200 }).add({ targets: "#fig3-wordlist-word1", duration: 200, opacity: .7, fill: "#f00", delay: 500 }).add({ targets: f, duration: 500, value: 105701, round: 1, delay: 500, update: () => { document.getElementById("fig3-wordlist-count").textContent = f.value } }).add({ targets: "#fig3-bg-text-font-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: "#fig3-gen-bg-text", duration: 10, opacity: 0, delay: 10 }).add({ targets: "#fig3-gen-bg-text2", duration: 10, opacity: 1, delay: 10 }).add({ targets: "#fig3-bg-text-size-container", duration: 300, opacity: 1, delay: 1e3 }).add({ targets: m, duration: 2e3, value: 50, round: 1, delay: 700, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-bg-text-size tspan").textContent = m.value } }).add({ targets: "#fig3-gen-bg-text2", duration: 10, opacity: 0, delay: 10 }).add({ targets: "#fig3-gen-bg-text3", duration: 10, opacity: 1, delay: 10 }).add({ targets: "#fig3-bg-text-pos-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: p, duration: 2e3, x: 80, y: 150, round: 1, delay: 700, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-bg-text-pos tspan").textContent = "x: " + p.x + "px, y: " + p.y + "px", anime({ targets: "#fig3-gen-bg-text3", duration: 1e3, translateX: -(p.x - 75), translateY: p.y / 2 - 45 }) } }).add({ targets: "#fig3-bg-text-opacity-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: x, duration: 2e3, value: 10, round: 1, delay: 700, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-bg-text-opacity tspan").textContent = (x.value > 100 ? 100 : x.value) + "%", anime({ targets: "#fig3-gen-bg-text3", duration: 1e3, opacity: x.value / 100 }) } }).add({ targets: "#fig3-annot3", opacity: 1, duration: 2500, delay: 100 }).add({ targets: ["#fig3-bg-text-opacity-container", "#fig3-bg-text-pos-container", "#fig3-bg-text-size-container", "#fig3-bg-text-font-container", "#fig3-annot3"], duration: 300, delay: anime.stagger(300), opacity: 0 }).add({ targets: "#fig3-annot3", opacity: 0, duration: 500, delay: 100 }).add({ targets: ["#fig3-annot5-1", "#fig3-num-words-container"], opacity: 1, duration: 300, delay: anime.stagger(2e3) }).add({ targets: v, duration: 200, delay: 1800, round: 1, value: 3, update: () => { document.querySelector("#fig3-num-words tspan").textContent = v.value } }).add({ targets: v, duration: 200, delay: 200, round: 1, value: 1, update: () => { document.querySelector("#fig3-num-words tspan").textContent = v.value } }).add({ targets: v, duration: 200, delay: 200, round: 1, value: 3, update: () => { document.querySelector("#fig3-num-words tspan").textContent = v.value } }).add({ targets: v, duration: 200, delay: 200, round: 1, value: 1, update: () => { document.querySelector("#fig3-num-words tspan").textContent = v.value } }).add({ targets: "#fig3-annot5-2", duration: 300, opacity: 1, delay: 1500 }).add({ targets: "#fig3-wordlist", duration: 3500, translateX: "-54px", easing: "easeInOutBack", delay: 2500 }).add({ targets: "#fig3-gen-text", opacity: 1, duration: 300, delay: 500 }).add({ targets: "#fig3-wordlist-word2", duration: 200, opacity: .7, fill: "#f00", delay: 500 }).add({ targets: f, duration: 500, value: 105700, round: 1, delay: 500, update: () => { document.getElementById("fig3-wordlist-count").textContent = f.value } }).add({ targets: "#fig3-annot5-3", duration: 300, opacity: 1, delay: 1500 }).add({ targets: "#fig3-text-size-container", opacity: 1, duration: 300, delay: 2e3 }).add({ targets: b, duration: 2e3, value: 75, round: 1, delay: 700, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-text-size tspan").textContent = b.value } }).add({ targets: "#fig3-gen-text", duration: 10, opacity: 0, delay: 10 }).add({ targets: "#fig3-gen-text2", duration: 10, opacity: 1, delay: 10 }).add({ targets: "#fig3-text-opacity-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: I, duration: 2e3, value: 70, round: 1, delay: 700, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-text-opacity tspan").textContent = (I.value > 100 ? 100 : I.value) + "%", anime({ targets: "#fig3-gen-text2", duration: 300, opacity: I.value / 100 }) } }).add({ targets: "#fig3-text-pos-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: "#fig3-text-pos-container", duration: 300, opacity: 1, delay: 500 }).add({ targets: h, duration: 2e3, x: 10, y: 75, round: 1, delay: 100, easing: "easeInOutBack", update: () => { document.querySelector("#fig3-text-pos tspan").textContent = "x: " + h.x + "px, y: " + h.y + "px", anime({ targets: "#fig3-gen-text2", duration: 1e3, translateX: -(h.x - 27), translateY: h.y / 2 - 45 }) } }).add({ targets: "#fig3-annot5-1", opacity: 1, duration: 2500, delay: 100 }).add({ targets: ["#fig3-text-pos-container", "#fig3-text-opacity-container", "#fig3-text-size-container", "#fig3-num-words-container", "#fig3-annot4", "#fig3-wordlist-container"], duration: 300, delay: anime.stagger(300), opacity: 0 }).add({ targets: ["#fig3-annot5-3", "#fig3-annot5-2", "#fig3-annot5-1"], duration: 300, opacity: 0, delay: 300 }).add({ targets: ["#fig3-annot6"], duration: 300, delay: 1e3, opacity: 1 }).add({ targets: B, duration: 1e3, delay: 1e3, value: 100, round: 1, easing: "easeInOutBack", update: () => { document.getElementById("fig3-gen-noise").style.opacity = Number(B.value) } }).add({ targets: ["#fig3-annot6"], duration: 300, delay: 300, opacity: 1 }).add({ targets: ["#fig3-annot7", "#fig3-real-gs", "#fig3-gen-gs"], opacity: 1, delay: anime.stagger(500), duration: 300 }) });